package config

import (
	"github.com/spf13/viper"
	redis "gopkg.in/redis.v4"
)

// [redis]
// address = "127.0.0.1:6379"
// password = "foo"
// db = 1
// key_prefix = "some:random:prefix:"
const (
	vRedisAddress   = "redis.address" // ip:port
	vRedisPassword  = "redis.password"
	vRedisDB        = "redis.db"
	vRedisKeyPrefix = "redis.key_prefix" // {{ cookiecutter.client_name|lower }}:{{ cookiecutter.project_name|lower }}:
)

func NewRedisConfig() *redis.Options {
	// Address, default "localhost:6379"
	if !viper.IsSet(vRedisAddress) {
		viper.Set(vRedisAddress, "localhost:6379")
	}

	// Password, default ""
	if !viper.IsSet(vRedisPassword) {
		viper.Set(vRedisPassword, "")
	}

	// DB Number, default 0
	if !viper.IsSet(vRedisDB) {
		viper.Set(vRedisDB, 0)
	}

	return &redis.Options{
		Addr:     viper.GetString(vRedisAddress),
		Password: viper.GetString(vRedisPassword),
		DB:       viper.GetInt(vRedisDB),
	}
}

// Returns redis key prefix string
func RedisKeyPrefix() string {
	if !viper.IsSet(vRedisKeyPrefix) {
		viper.Set(vRedisKeyPrefix, "{{ cookiecutter.client_name|lower }}:{{ cookiecutter.project_name|lower }}:")
	}

	return viper.GetString(vRedisKeyPrefix)
}
